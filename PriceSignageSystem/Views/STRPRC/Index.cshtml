@using PriceSignageSystem.Models.Dto;
@{
    ViewData["Title"] = "Product Page";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/html5-qrcode.min.js"></script>

<div class="content-wrapper bg-white px-3">
    <br />

    <div class="content">
        <div class="overlay-wrapper" id="loadingContainer" style="display:none;">
            <div class="overlay" style="background-color: rgba(0, 0, 0, 0.59); z-index: 999999;">
                <img class="" src="~/Content/Images/loading.gif" alt="Loading" style="max-width:350px;" />
            </div>
        </div>
    </div>

    @if (!String.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert text-white text-bold" style="background-color: #8d0303;">
            <center>
                <h3>@ViewBag.ErrorMessage</h3>
            </center>
        </div>
    }

    <div class="wrapper">
        <div class="row align-items-center justify-content-center">
            <div class="col-auto">
                @*<label for="searchInput" class="form-label fw-bold">Enter SKU/UPC:</label>*@
                <select name="SearchFilter" id="searchFilter" class="form-control custom-select">
                    <option value="SKU">SKU</option>
                    <option value="UPC">UPC</option>
                </select>
            </div>
            <div class="col-auto">
                <input type="text" id="searchInput" class="form-control" style="max-width: 200px; background-color: #fff;" placeholder="Search...">
            </div>
            <div class="col-auto" id="qrScanBtnContainer">
                <button id="qrScanBtn" class="btn btn-primary" onclick="startScanning()">Scan QR Code</button>
            </div>
        </div>
    </div>

    <!-- QR SCAN Modal -->
    <div class="modal" id="qrScanModal" tabindex="-1" role="dialog" aria-labelledby="qrScanModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="qrScanModalLongTitle">QR CODE SCAN</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="reader"></div>
                </div>
            </div>
        </div>
    </div>

    <br />
    <div id="searchResults">
        @Html.Partial("_SearchResultPartialView", new STRPRCDto())
    </div>
</div>


<script>
    var qrScanBtnContainer = document.getElementById('qrScanBtnContainer');

    $('#searchInput').focus();
    qrScanBtnContainer.style.display = 'none';

    // The scan button will only appear if UPC is selected
    document.getElementById('searchFilter').addEventListener('change', function () {
        var selectedValue = this.value;

        if (selectedValue === 'UPC') {
            qrScanBtnContainer.style.display = 'block';
        } else {
            qrScanBtnContainer.style.display = 'none';
        }
    });

    $(document).ready(function () {
        var timeoutId;
        $('#searchInput').on('input', function () {
            var searchQuery = $(this).val();
            var filter = $('#searchFilter').val();
            // Clear any previously scheduled request
            clearTimeout(timeoutId);

            // Schedule a new request after 300 milliseconds (adjust as needed)
            timeoutId = setTimeout(function() {
                $.ajax({
                    url: '@Url.Action("Search", "STRPRC")',
                    type: 'POST',
                    data: { query: searchQuery, searchFilter: filter},
                    success: function (result) {
                        $('#searchResults').html(result);
                    },
                    error: function () {
                        // Handle error if necessary
                    }
                });
            }, 300); // Adjust the delay as needed
        });
    });

    function onScanSuccess(decodedText, decodedResult) {
        console.log(`Code matched = ${decodedText}`, decodedResult);
    }

    function onScanFailure(error) {
        console.warn(`Code scan error = ${error}`);
    }

    function startScanning() {
        $('#qrScanModal').modal('show');
        var html5QrcodeScanner = new Html5QrcodeScanner(
            "reader",
            { fps: 10, qrbox: { width: 250, height: 250 } },
             false);

        html5QrcodeScanner.render(onScanSuccess, onScanFailure);
    }
    
</script>
