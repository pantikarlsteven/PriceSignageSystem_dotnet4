
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>PCA</title>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

    <style>
        td.details-control {
            text-align: center;
            color: forestgreen;
            cursor: pointer;
        }

        tr.shown td.details-control {
            text-align: center;
            color: red;
        }
    </style>
</head>

<body>
    <div class="content-wrapper bg-white px-3">
        <br />
        <div class="row ">
            <div class="card elevation-3 px-0 ">
                <div class="card-header bg-primary1 text-white">
                    <h3 class="card-title">PCA</h3>
                </div>
                <div class="card-body row mx-auto">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="startDate">Start Date:</label>
                            <input type="text" id="startDate" name="startDate" class="form-control" />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="endDate">End Date:</label>
                            <input type="text" id="endDate" name="endDate" class="form-control" />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label class="text-white">Search</label>
                        <button id="searchBtn" class="btn btn-primary btn-block">Search</button>
                    </div>
                </div>
                <hr />
                <div class="card-body table-responsive">
                    <table id="dataTable" class="table table-striped table-hover " style="width:100%">
                        <thead>
                            <tr>
                                <th><input type="checkbox" id="select-all"></th>
                                <th></th>
                                <th>SKU</th>
                                <th>UPC</th>
                                <th class="text-nowrap">Item Desc.</th>
                                <th>Reg Price</th>
                                <th>Promo Price</th>
                                <th>Date Start</th>
                                <th>Date End</th>
                                <th>Type</th>
                                <th>Size</th>
                                <th>Category</th>
                                <th> - </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td colspan="13" style="text-align: center;">Please enter dates</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <script src="~/Scripts/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/select/1.2.1/js/dataTables.select.min.js" type="text/javascript"></script>

</body>
</html>

<script>
        //var $j = jQuery.noConflict();

        $(document).ready(function () {
            $("#startDate").datepicker({
                dateFormat: 'yy-mm-dd'
            });
            $("#endDate").datepicker({
                dateFormat: 'yy-mm-dd'
            });

            var table = null;
            $("#searchBtn").click(function () {
                var startDate = $("#startDate").val();
                var endDate = $("#endDate").val();

                $.ajax({
                    url: '@Url.Action("GetDataByDate", "STRPRC")',
                    type: 'POST',
                    data: { startDate: startDate, endDate: endDate },
                    success: function (data) {

                        // Destroy the existing DataTable instance if it exists
                        //if ($.fn.DataTable.isDataTable('#dataTable')) {
                        //    $('#dataTable').DataTable().destroy();
                        //}
                        if (table !== null) {
                            table.destroy();
                        }

                       // Initialize the DataTable with the retrieved data and scrollable property
                         table = $('#dataTable').DataTable({
                             scrollY: 500,
                             scrollX: true,
                             scroller: true,
                             data: data,
                             select: "single",
                             columns: [
                                 {
                                     "className": 'select-control',
                                     "orderable": false,
                                     "data": null,
                                     "defaultContent": '',
                                     "render": function () {
                                         return '<input type="checkbox" class="select-row">';
                                     },
                                     width: "15px"
                                 },
                                 {
                                     "className": 'details-control',
                                     "orderable": false,
                                     "data": null,
                                     "defaultContent": '',
                                     "render": function () {
                                         return '<i class="fa fa-plus-square" aria-hidden="true"></i>';
                                     },
                                     width: "15px"
                                 },
                                 { "data": "O3SKU", "name": "O3SKU", "autoWidth": true },
                                 { "data": "O3UPC", "name": "O3UPC", "autoWidth": true },
                                 { "data": "O3IDSC", "name": "O3IDSC", "className": "text-nowrap" },
                                 { "data": "O3REGU", "name": "O3REGU", "autoWidth": true },
                                 { "data": "O3POS", "name": "O3POS", "autoWidth": true },
                                 { "data": "O3SDT", "name": "O3SDT", "autoWidth": true },
                                 { "data": "O3EDT", "name": "O3EDT", "autoWidth": true },
                                 { "data": "TypeName", "name": "TypeName", "autoWidth": true },
                                 { "data": "SizeName", "name": "SizeName", "autoWidth": true },
                                 { "data": "CategoryName", "name": "CategoryName", "autoWidth": true },
                                {
                                    data: null,
                                    render: function (data, type, row) {
                                        return '<button class="printBtn btn btn-primary btn-sm" data-id="' + data.O3SKU + '">Print</button>';
                                    }
                                }
                            ],
                            "language": {
                                "emptyTable": "No data available"
                            }
                         });

                        //var selectedRows = []; // Array to store selected row indices

                        //// Handle individual row checkboxes
                        //$('#dataTable tbody').on('change', '.select-row', function () {
                        //    var rowIndex = $(this).closest('tr').index();

                        //    if (this.checked) {
                        //        selectedRows.push(rowIndex);
                        //    } else {
                        //        selectedRows = selectedRows.filter(function (index) {
                        //            return index !== rowIndex;
                        //        });
                        //    }
                        //});

                        //// Handle the "Select All" checkbox
                        //$('#select-all').on('change', function () {
                        //    selectedRows = [];

                        //    if (this.checked) {
                        //        $('#dataTable tbody tr').each(function (index) {
                        //            $(this).find('.select-row').prop('checked', true);
                        //            selectedRows.push(index);
                        //        });
                        //    } else {
                        //        $('#dataTable tbody tr').find('.select-row').prop('checked', false);
                        //    }
                        //});

                        //// Custom function to check if a row is selected
                        //function isSelectedRow(rowIndex) {
                        //    return selectedRows.includes(rowIndex);
                        //}

                        //// Example usage: Print selected rows
                        //$('#checkSelected').on('click', function () {
                        //    debugger
                        //    selectedRows.forEach(function (rowIndex) {
                        //        var data = table.row(rowIndex).data();
                        //        // Print data of the selected row
                        //        console.log(data);
                        //    });
                        //});

                        // Handle the "Select All" checkbox
                        $('#select-all').on('change', function () {
                            $('.select-row').prop('checked', this.checked);
                            
                        });

                        // Handle individual row checkboxes
                        $('#dataTable tbody').on('change', '.select-row', function () {
                            if (!this.checked) {
                                $('#select-all').prop('checked', false);
                            } else {
                                var allChecked = $('.select-row:checked').length === $('.select-row').length;
                                $('#select-all').prop('checked', allChecked);
                            }
                        });

                        // Add event listener for opening and closing details
                        $('#dataTable tbody').on('click', 'td.details-control', function () {
                            
                            var tr = $(this).closest('tr');
                            var tdi = tr.find("i.fa");
                            var row = table.row(tr);

                            if (row.child.isShown()) {
                                // This row is already open - close it
                                row.child.hide();
                                tr.removeClass('shown');
                                tdi.first().removeClass('fa-minus-square');
                                tdi.first().addClass('fa-plus-square');
                            }
                            else {
                                // Open this row
                                row.child(format(row.data())).show();
                                tr.addClass('shown');
                                tdi.first().removeClass('fa-plus-square');
                                tdi.first().addClass('fa-minus-square');
                            }
                        });

                    }
                });
            });

            //PRINT BUTTON
            $('#dataTable').on('click', '.printBtn', function () {
                var rowId = $(this).data('id');

                $.ajax({
                    url: '@Url.Action("GetDataBySKU", "STRPRC")' ,
                    type: 'POST',
                    data: { id: rowId },
                    success: function (response) {

                        // Create the dropdown options
                        var sizeOptions = '';
                        var typeOptions = '';
                        var categoryOptions = '';

                        // Populate dropdown options from the server response
                        for (var i = 0; i < response.SizeArray.length; i++) {
                            var option = response.SizeArray[i];
                            sizeOptions += '<option value="' + option.Id + '">' + option.Name + '</option>';
                        }
                        for (var i = 0; i < response.TypeArray.length; i++) {
                            var option = response.TypeArray[i];
                            typeOptions += '<option value="' + option.Id + '">' + option.Name + '</option>';
                        }
                        for (var i = 0; i < response.CategoryArray.length; i++) {
                            var option = response.CategoryArray[i];
                            categoryOptions += '<option value="' + option.Id + '">' + option.Name + '</option>';
                        }

                        // Build the HTML for the dropdowns
                        var dropdownHtml = '<div class="form-row">' +
                            '<div class="form-group row col-12">' +
                            '<label class="col-sm-2 col-form-label" for="sizeDropdown">Size:</label>' +
                            '<select class="col-sm-9  ml-3 form-control" id="sizeDropdown" >' +
                            sizeOptions +
                            '</select>' +
                            '</div>' +
                            '<div class="form-group row col-md-12">' +
                            '<label class="col-sm-2 col-form-label" for="typeDropdown">Type:</label>' +
                            '<select class="col-sm-9  ml-3 form-control" id="typeDropdown">' +
                            typeOptions +
                            '</select>' +
                            '</div>' +
                            '</div>' +
                            '<div class="form-row">' +
                            '<div class="form-group row col-md-12">' +
                            '<label class="col-sm-2 col-form-label" for="categoryDropdown">Category:</label>' +
                            '<select class="col-sm-9  ml-3 form-control" id="categoryDropdown">' +
                            categoryOptions +
                            '</select>' +
                            '</div>' +
                            '</div>';

                        // Build the HTML for the print button
                        var printButtonHtml = '<button id="printButton" class="btn btn-primary">Print</button>';

                        // Create the modal content
                        var modalContent = '<div class="modal-dialog modal-sm modal-dialog-centered">' +
                            '<div class="modal-content">' +
                            '<div class="modal-header">' +
                            '<h5 class="modal-title">Print Report</h5>' +
                            '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
                            '<span aria-hidden="true">&times;</span>' +
                            '</button>' +
                            '</div>' +
                            '<div class="modal-body">' +
                            dropdownHtml +
                            '</div>' +
                            '<div class="modal-footer">' +
                            printButtonHtml +
                            '</div>' +
                            '</div>' +
                            '</div>';

                        // Remove any existing modals
                        $('#modalView').remove();

                        // Append the modal to the body
                        $('body').append('<div id="modalView" class="modal">' + modalContent + '</div>');

                        // Show the modal with fade-in effect from top
                        $('#modalView').modal({
                            show: true,
                            backdrop: false,
                            keyboard: false
                        });

                        // Print button click event handler
                        $('#printButton').click(function () {

                            response.SelectedSizeId = $('#sizeDropdown').val();
                            response.SelectedTypeId = $('#typeDropdown').val();
                            response.SelectedCategoryId = $('#categoryDropdown').val();

                            // Generate the URL for the DisplayReport action
                            var url = '@Url.Action("AutoPrintReportFromAdvancePrinting", "Report")';
                            // Serialize the response object to JSON
                            var serializedResponse = JSON.stringify(response);

                            // Append the serialized response as a query parameter to the URL
                            url += '?response=' + encodeURIComponent(serializedResponse);

                            // Open the URL in a new tab or window
                            window.open(url, '_blank');
                        });
                    }
                });
            });

            // Close the modal when the modal close button is clicked
            $(document).on('click', '.modal .close', function () {
                $('#modalView').modal('hide');
            });

            // Remove the modal from the DOM when it is hidden
            $(document).on('hidden.bs.modal', '.modal', function () {
                $(this).remove();
            });

        });



        document.addEventListener("DOMContentLoaded", function () {
            var today = new Date();
            var tomorrow = new Date(today);
            tomorrow.setDate(tomorrow.getDate() + 1);
            var formattedDate = tomorrow.toISOString().split('T')[0];
            document.getElementById('startDate').value = formattedDate;
            document.getElementById('endDate').value = formattedDate;

        });

        function format(d) {
            // `d` is the original data object for the row
            return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">' +
                '<tr>' +
                '<td>Brand:</td>' +
                '<td>' + d.O3FNAM + '</td>' +
                    '<td>Div:</td>' +
                    '<td>' + d.O3DIV + '</td>' +
                '</tr>' +
                '<tr>' +
                '<td>Model:</td>' +
                '<td>' + d.O3MODL + '</td>' +
                    '<td>Country:</td>' +
                    '<td>' + d.O3TRB3 + '</td>' +
                '</tr>' +
                '<tr>' +
                '<td>Dept:</td>' +
                '<td>' + d.O3DEPT + '</td>' +
                    '<td>Sub-Dept:</td>' +
                    '<td>' + d.O3SDPT + '</td>' +
                '</tr>' +
                '<tr>' +                '</tr>' +
                '<tr>' +
                '<td>Class:</td>' +
                '<td>' + d.O3CLAS + '</td>' +
                    '<td>Sub-Class:</td>' +
                    '<td>' + d.O3SCLS + '</td>' +
                '</tr>' +
                '<tr>' +
                '</tr>' +
                '<tr>' +
                '<td>Status:</td>' +
                '<td>' + d.O3SCCD + '</td>' +
                '</tr>' +
                '</table>';
        }

</script>
