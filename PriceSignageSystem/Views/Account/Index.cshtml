
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">


    <script src="~/Scripts/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>


</head>
<body>
    <div class="content-wrapper bg-white px-3">
        <div class="row">
            <div class="card elevation-3  px-0 ">
                <ul class="nav nav-tabs bg-primary1 px-2 pt-2">
                    <li class="nav-item">
                        <a class="nav-link nav-link-tab active" style="color:white;" data-toggle="tab" href="#userInfo">User Info</a>
                    </li>
                </ul>

                <div class="tab-content">
                    <div id="userInfo" class="tab-pane active mx-2">
                        <h3 class="text-center mt-2">User Account Information</h3>

                        <table id="userList" class="table table-sm table-hover" style="width: 100%; text-align: center;">
                            <thead style="background-color: #1C3766;" class="text-white">
                                <tr>
                                    <th>Employee ID</th>
                                    <th>Username</th>
                                    <th>Role</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td colspan="4" style="text-align: center;">This data is hidden</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteUserModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close cancelDeleteBtn" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this user?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary cancelDeleteBtn">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add User Modal -->
    <div class="modal" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addUserModalLabel">Add New User</h5>
                    <button type="button" class="btn-close cancelAddUserBtn" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addUserForm">
                        <div class="mb-3">
                            <label for="employeeId" class="form-label">Employee ID</label>
                            <input type="text" class="form-control" id="employeeId" required>
                        </div>
                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <input type="text" class="form-control" id="username" required>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="password" required>
                                <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordForAdduser()">
                                    <i class="fa fa-eye" id="eye-icon"></i>
                                </button>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="roleList" class="form-label">Role</label>
                            <select class="form-control custom-select" id="roleList">
                                <option value="">Loading...</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary cancelAddUserBtn">Cancel</button>
                    <button type="button" class="btn btn-success" id="confirmAddUserBtn">Add</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Update Modal -->
    <div class="modal" id="updateInfoModal" tabindex="-1" aria-labelledby="updateInfoModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateInfoModalLabel">Edit User</h5>
                    <button type="button" class="btn-close cancelUpdateInfoBtn" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="updateInfoForm">
                        <div class="mb-3">
                            <label for="employeeId" class="form-label">Employee ID</label>
                            <input type="text" class="form-control" id="updateEmployeeId" required>
                        </div>
                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <input type="text" class="form-control" id="updateUsername" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">New Password</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="updatePassword">
                                <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordForUpdateuser()">
                                    <i class="fa fa-eye" id="update-eye-icon"></i>
                                </button>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="UpdateRoleList" class="form-label">Role</label>
                            <select class="form-control custom-select" id="UpdateRoleList">
                                <option value="">Loading...</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary cancelUpdateInfoBtn">Cancel</button>
                    <button type="button" class="btn btn-success" id="confirmUpdateInfoBtn">Update</button>
                </div>
            </div>
        </div>
    </div>

</body>
</html>
<script>
    var registerModal = document.getElementById('registerModal');
    var userDT = null;
    var roles = [];

    $(document).ready(function () {

        // FIX 
        $('.nav-link-tab').click(function () {
            // Remove 'active' class from all tabs
            $('.nav-link-tab').removeClass('active');

            // Add 'active' class to the clicked tab
            $(this).addClass('active');

            // Get the href value of the clicked tab
            var tabId = $(this).attr('href');

            // Show the corresponding tab content
            $('.tab-pane').removeClass('show active');
            $(tabId).addClass('show active');

            var currentActiveTab = $('.nav-link-tab.active').attr('href');
            if (currentActiveTab == "#userInfo") {
                userDT.draw();
            }
        });

        // FIX TABLE WHEN SIDE NAV IS COLLAPSED
        $('.nav-link-burger').click(function () {
            setTimeout(function () {
                $("a.nav-link-tab.active").trigger("click");
            }, 300);
        });

        $.ajax({
            url: '/Account/GetUserInformation',
            type: 'POST',
            success: function (response) {

                if (userDT !== null) {
                    userDT.destroy();
                }
                LoadUserDatatable(response);
            },
            error: function (err) {}
        })

        // List Of Users Datatable
        function LoadUserDatatable(data) {
            userDT = $('#userList').DataTable({
                scrollY: 500,
                scrollX: true,
                scroller: true,
                deferRender: true,
                data: data,
                lengthMenu: [
                    [10, 25, 50, -1],
                    [10, 25, 50, 'All']
                ],
                pageLength: -1,
                columns: [
                    { data: 'EmployeeId', name: 'EmployeeId' },
                    { data: 'UserName', name: 'UserName' },
                    { data: 'RoleName', name: 'RoleName' },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return '<button class="btn btn-warning btn-sm" onclick=\'updateUser(' + JSON.stringify(row) + ')\'>Update</button> ' +
                            '<button class="btn btn-danger btn-sm" onclick="deleteUser(' + data.UserId + ')">Delete</button>';
                        }
                    }
                ],
                "dom": '<"top"lfB>rt<"bottom"ip>',
                // After table initialization
                "initComplete": function () {

                    $('.dataTables_length').append('<button class="btn btn-success ml-2" id="addUserBtn">Add User</button>');

                    $('#addUserBtn').on('click', function () {
                        openAddUserModal();
                    });

                }
            });
        }
    });

    fetch('/Account/GetRoleList')
        .then(response => response.json())
        .then(data => {
            roles = data;
        });
       
    function deleteUser(id) {
        const modal = new bootstrap.Modal(document.getElementById('deleteUserModal'));
        modal.show();

        document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
            modal.hide();

            $.ajax({
                url: "/Account/DeleteUserById",
                type: "POST",
                data: { id: id },
                success: function (response) {
                    window.location.reload();
                    if (response) {
                        alert('User Deleted Succesfully!')
                    } else {
                        alert('Action Denied!')
                    }
                },
                error: function () {}
            })
        });

        cancelButtons(modal);
    }

    function updateUser(data) {
        const modal = new bootstrap.Modal(document.getElementById('updateInfoModal'));
        modal.show();

        $('#updateUsername').val(data.UserName);
        $('#updateEmployeeId').val(data.EmployeeId);

        const selectElement = document.getElementById('UpdateRoleList');
        selectElement.innerHTML = '';
        roles.forEach(option => {
            const optionElement = document.createElement('option');
            optionElement.value = option.Id;
            optionElement.textContent = option.Name;
            selectElement.appendChild(optionElement);
        });

        $('#UpdateRoleList').val(data.RoleId);


        document.getElementById('confirmUpdateInfoBtn').addEventListener('click', function () {

            var empId = $('#updateEmployeeId').val();
            var roleId = $('#UpdateRoleList').val();
            var pw = $('#UpdatePassword').val();
            
            var message = [];
            if (empId === '') {
                message.push("Employee ID must not be blank.");
            }
            if (message.length > 0) {
                alert(message.join('\n'));
                return;
            }

            var dto = {
                UserId: data.UserId,
                EmployeeId: empId,
                RoleId: roleId,
                Password: pw
            };

            modal.hide();
            $.ajax({
                url: "/Account/UpdateUserInfo",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({ dto: dto  }),
                success: function (response) {
                    window.location.reload();
                    if (response.success) {
                        alert(response.message)
                    } else {
                        alert(response.message)
                    }
                },
                error: function () { }
            })
        });

        cancelButtons(modal);
    }

    function togglePasswordForAdduser() {
        const passwordInput = document.getElementById('password');
        const eyeIcon = document.getElementById('eye-icon');

        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';  // Show the password
            eyeIcon.classList.remove('fa-eye');
            eyeIcon.classList.add('fa-eye-slash');  // Change icon to eye-slash
        } else {
            passwordInput.type = 'password';  // Hide the password
            eyeIcon.classList.remove('fa-eye-slash');
            eyeIcon.classList.add('fa-eye');  // Change icon back to eye
        }
    }

    function togglePasswordForUpdateuser() {
        const passwordInput = document.getElementById('updatePassword');
        const eyeIcon = document.getElementById('update-eye-icon');

        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';  // Show the password
            eyeIcon.classList.remove('fa-eye');
            eyeIcon.classList.add('fa-eye-slash');  // Change icon to eye-slash
        } else {
            passwordInput.type = 'password';  // Hide the password
            eyeIcon.classList.remove('fa-eye-slash');
            eyeIcon.classList.add('fa-eye');  // Change icon back to eye
        }
    }

    function openAddUserModal() {
        const modal = new bootstrap.Modal(document.getElementById('addUserModal'));
        modal.show();

        const selectElement = document.getElementById('roleList');
        selectElement.innerHTML = '';
        roles.forEach(option => {
            const optionElement = document.createElement('option');
            optionElement.value = option.Id;
            optionElement.textContent = option.Name;
            selectElement.appendChild(optionElement);
        });

        cancelButtons(modal);

        document.getElementById('confirmAddUserBtn').addEventListener('click', function () {

            const username = $('#username').val();
            const employeeId = $('#employeeId').val();
            const password = $('#password').val();
            const role = $('#roleList').val();

            if (username && employeeId && password && role) {
                modal.hide();

                const newUser = {
                    UserName: username,
                    EmployeeId: employeeId,
                    Password: password,
                    RoleId: role
                };

                $.ajax({
                    url: "/Account/AddUser",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ newUser: newUser }),
                    success: function (response) {
                        window.location.reload();
                        if (response) {
                            alert('User Added Successfully!');
                        }
                        else {
                            alert('Username already Exists!');
                        }
                    },
                    error: function (err) { }
                })
            } else {
                alert('Please fill in all fields.');
                return;
            }
        });

    }

    function cancelButtons(modal) {
        const cancelDeleteButtons = document.getElementsByClassName('cancelDeleteBtn');
        const cancelUpdateButtons = document.getElementsByClassName('cancelUpdateInfoBtn');
        const cancelAddUserButtons = document.getElementsByClassName('cancelAddUserBtn');

        for (let i = 0; i < cancelDeleteButtons.length; i++) {
            cancelDeleteButtons[i].addEventListener('click', function () {
                modal.hide();
            });
        }

        for (let i = 0; i < cancelUpdateButtons.length; i++) {
            cancelUpdateButtons[i].addEventListener('click', function () {
                modal.hide();
            });
        }

        for (let i = 0; i < cancelAddUserButtons.length; i++) {
            cancelAddUserButtons[i].addEventListener('click', function () {
                modal.hide();
            });
        }
    }

</script>

